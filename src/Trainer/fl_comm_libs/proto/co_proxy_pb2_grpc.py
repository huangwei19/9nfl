# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from fl_comm_libs.proto import co_proxy_pb2 as fl__comm__libs_dot_proto_dot_co__proxy__pb2


class PairServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.RegisterUUID = channel.unary_unary(
        '/jdfl.PairService/RegisterUUID',
        request_serializer=fl__comm__libs_dot_proto_dot_co__proxy__pb2.Request.SerializeToString,
        response_deserializer=fl__comm__libs_dot_proto_dot_co__proxy__pb2.Status.FromString,
        )
    self.GetPairInfo = channel.unary_unary(
        '/jdfl.PairService/GetPairInfo',
        request_serializer=fl__comm__libs_dot_proto_dot_co__proxy__pb2.Request.SerializeToString,
        response_deserializer=fl__comm__libs_dot_proto_dot_co__proxy__pb2.PairInfoResponse.FromString,
        )


class PairServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def RegisterUUID(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetPairInfo(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_PairServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'RegisterUUID': grpc.unary_unary_rpc_method_handler(
          servicer.RegisterUUID,
          request_deserializer=fl__comm__libs_dot_proto_dot_co__proxy__pb2.Request.FromString,
          response_serializer=fl__comm__libs_dot_proto_dot_co__proxy__pb2.Status.SerializeToString,
      ),
      'GetPairInfo': grpc.unary_unary_rpc_method_handler(
          servicer.GetPairInfo,
          request_deserializer=fl__comm__libs_dot_proto_dot_co__proxy__pb2.Request.FromString,
          response_serializer=fl__comm__libs_dot_proto_dot_co__proxy__pb2.PairInfoResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'jdfl.PairService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
